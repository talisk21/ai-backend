import { Tool, ToolInputSpecField } from "../tool.interface";

export class TextSummaryTool implements Tool {
  name = "text_summary";

  description =
    "–°–æ–∑–¥–∞—ë—Ç –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ –∏–∑ –¥–ª–∏–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞. " +
    "–í—ã–¥–µ–ª—è–µ—Ç –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å–∂–∞—Ç–æ–π –≤—ã–∂–∏–º–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è. " +
    "–ü–æ–ª–µ–∑–µ–Ω –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–∑–æ—Ä–∞ –¥–ª–∏–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, —Å—Ç–∞—Ç–µ–π –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–π.";

  inputSpec: ToolInputSpecField[] = [
    {
      name: "text",
      type: "string",
      required: true,
      description: "–î–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ (–Ω–µ –º–µ–Ω–µ–µ 50 —Å–∏–º–≤–æ–ª–æ–≤)."
    }
  ];

  async run(input: { text: string }): Promise<string> {
    const { text } = input;

    if (!text || text.length < 50) {
      return "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Ä–µ–∑—é–º–∏—Ä–æ–≤–∞–Ω–∏—è";
    }

    const sentences = text.split(/(?<=[.!?])\s+/).filter(Boolean);
    const summary = sentences.slice(0, Math.min(3, sentences.length)).join(" ");

    return `üìù –†–µ–∑—é–º–µ: ${summary}`;
  }
}
import { Tool } from '../tool.interface';

export class JsonExtractTool implements Tool {
  name = 'json_extract';
  description = '–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ JSON –ø–æ –∫–ª—é—á—É –∏–ª–∏ –ø—É—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: user.name)';

  async run(input: { json: object; path: string }): Promise<string> {
    const { json, path } = input;

    if (!json || typeof path !== 'string') {
      return '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥';
    }

    const keys = path.split('.');
    let result: any = json;

    for (const key of keys) {
      if (result && typeof result === 'object' && key in result) {
        result = result[key];
      } else {
        return `‚ùå –ö–ª—é—á '${key}' –Ω–µ –Ω–∞–π–¥–µ–Ω`;
      }
    }

    return `üì§ –ó–Ω–∞—á–µ–Ω–∏–µ: ${JSON.stringify(result)}`;
  }
}
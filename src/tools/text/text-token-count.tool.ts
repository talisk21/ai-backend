import { Tool } from '../tool.interface';

export class TextTokenCountTool implements Tool {
  name = 'text_token_count';
  description = '–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ';

  async run(input: { text: string }): Promise<string> {
    const { text } = input;

    if (!text || typeof text !== 'string') {
      return '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Ç–µ–∫—Å—Ç';
    }

    // –≠–≤—Ä–∏—Å—Ç–∏–∫–∞: 1 —Ç–æ–∫–µ–Ω ‚âà 0.75 —Å–ª–æ–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!" ‚Üí 3 —Å–ª–æ–≤–∞ ‚Üí ~4 —Ç–æ–∫–µ–Ω–∞)
    const words = text.trim().split(/\s+/).length;
    const approxTokens = Math.ceil(words * 1.33);

    return `üßÆ –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤: ${approxTokens}`;
  }
}
import { Tool, ToolInputSpecField } from "../tool.interface";

export class ClassifyTextTool implements Tool {
  name = "classify_text";

  description =
    "–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ—Å—Ç—É—é –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤. " +
    "–ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ–±—Ä–∞—â–µ–Ω–∏–π, —Å–æ–æ–±—â–µ–Ω–∏–π –∏–ª–∏ –∑–∞–¥–∞–Ω–∏–π –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É —Å–ª–æ–≤–∞—Ä—é. " +
    "–ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –æ—Ç–Ω–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç –∫ –º–µ—Ç–∫–µ \"–æ–ø–ª–∞—Ç–∞\", –µ—Å–ª–∏ –æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª–æ–≤–∞: \"–∫–∞—Ä—Ç–∞\", \"—Å—á—ë—Ç\", \"–ø–ª–∞—Ç—ë–∂\".";

  inputSpec: ToolInputSpecField[] = [
    {
      name: "text",
      type: "string",
      required: true,
      description: "–¢–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å. –ú–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ñ—Ä–∞–∑–∞ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ."
    },
    {
      name: "labels",
      type: "object",
      required: true,
      description: "–û–±—ä–µ–∫—Ç, –≥–¥–µ –∫–ª—é—á–∏ ‚Äî –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –∞ –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî –º–∞—Å—Å–∏–≤ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤. –ù–∞–ø—Ä–∏–º–µ—Ä: { \"–æ–ø–ª–∞—Ç–∞\": [\"–∫–∞—Ä—Ç–∞\", \"—Å—á—ë—Ç\"], \"—Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞\": [\"–æ—à–∏–±–∫–∞\", \"–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç\"] }"
    }
  ];

  async run(input: { text: string; labels: Record<string, string[]> }): Promise<string> {
    const { text, labels } = input;

    if (!text || typeof text !== "string" || !labels || typeof labels !== "object") {
      return "‚ùå –£–∫–∞–∂–∏ —Ç–µ–∫—Å—Ç –∏ —Å–ø–∏—Å–æ–∫ –º–µ—Ç–æ–∫ —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏";
    }

    const lowerText = text.toLowerCase();
    const matched: string[] = [];

    for (const label of Object.keys(labels)) {
      const keywords = labels[label];
      if (keywords.some(word => lowerText.includes(word.toLowerCase()))) {
        matched.push(label);
      }
    }

    return matched.length > 0
      ? `üè∑Ô∏è –ù–∞–π–¥–µ–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${matched.join(", ")}`
      : "üîç –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã";
  }
}
import { Tool, ToolInputSpecField } from "../tool.interface";
import axios from "axios";

export class UrlTitleTool implements Tool {
  name = "url_title";

  description =
      "–ü–æ–ª—É—á–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–≥–∞ `<title>` –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É URL. " +
      "–ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–æ–≤.";

  inputSpec: ToolInputSpecField[] = [
    {
      name: "url",
      type: "string",
      required: true,
      description: "–ü–æ–ª–Ω—ã–π URL-–∞–¥—Ä–µ—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –ù–∞–ø—Ä–∏–º–µ—Ä: \"https://example.com\""
    }
  ];

  async run(input: { url: string }): Promise<string> {
    const { url } = input;

    if (!url || typeof url !== "string") {
      return "‚ùå URL –Ω–µ —É–∫–∞–∑–∞–Ω";
    }

    try {
      const response = await axios.get(url, {
        headers: {
          "User-Agent": "Mozilla/5.0 (compatible; AI-Agent/1.0)"
        },
        timeout: 10000
      });

      const html = response.data as string;
      const match = html.match(/<title[^>]*>(.*?)<\/title>/i);

      if (match && match[1]) {
        return `üìå –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${match[1].trim()}`;
      }

      return "‚ÑπÔ∏è –¢–µ–≥ <title> –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ";
    } catch (error: any) {
      return `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: ${error?.message || "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}`;
    }
  }
}
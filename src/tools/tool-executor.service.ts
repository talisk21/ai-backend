import { Injectable } from '@nestjs/common';
import { toolRegistry } from './tool-registry';
import { LogService } from '../log/log.service';

@Injectable()
export class ToolExecutorService {
  constructor(private readonly log: LogService) {}

  async run(toolName: string, input: any): Promise<string> {
    const tool = toolRegistry.find((t) => t.name === toolName);

    if (!tool) {
      const message = `‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: ${toolName}`;
      await this.log.error(message, 'ToolExecutorService', { toolName, input });
      throw new Error(message);
    }

    try {
      const output = await tool.run(input);

      await this.log.info(`üõ†Ô∏è –í—ã–ø–æ–ª–Ω–µ–Ω –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: ${toolName}`, 'ToolExecutorService', {
        tool: toolName,
        input,
        output,
      });

      return output;
    } catch (error: any) {
      await this.log.error(`‚ùå –û—à–∏–±–∫–∞ –≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–µ: ${toolName}`, 'ToolExecutorService', {
        tool: toolName,
        input,
        error: error.message,
      });

      return `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ "${toolName}": ${error.message}`;
    }
  }
}
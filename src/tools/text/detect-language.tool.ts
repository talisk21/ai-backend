import { Tool, ToolInputSpecField } from "../tool.interface";

export class DetectLanguageTool implements Tool {
  name = "detect_language";

  description =
    "–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —è–∑—ã–∫ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ franc. " +
    "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç—Ä—ë—Ö–±—É–∫–≤–µ–Ω–Ω—ã–π ISO 639-3 –∫–æ–¥ —è–∑—ã–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: rus, eng, fra). " +
    "–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞, –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π, –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –ø—Ä.";

  inputSpec: ToolInputSpecField[] = [
    {
      name: "text",
      type: "string",
      required: true,
      description: "–¢–µ–∫—Å—Ç, —è–∑—ã–∫ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å. –ú–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, —Ñ—Ä–∞–∑–∞ –∏–ª–∏ –∞–±–∑–∞—Ü."
    }
  ];

  async run(input: { text: string }): Promise<string> {
    const { text } = input;

    if (!text || typeof text !== "string") {
      return "‚ùå –£–∫–∞–∂–∏ —Ç–µ–∫—Å—Ç";
    }

    const francModule = await import("franc");
    const detectLanguage = francModule.default as unknown as (text: string) => string;

    const lang = detectLanguage(text);

    if (lang === "und") {
      return "‚ö†Ô∏è –Ø–∑—ã–∫ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω";
    }

    return `üåê –Ø–∑—ã–∫ —Ç–µ–∫—Å—Ç–∞: ${lang}`;
  }
}
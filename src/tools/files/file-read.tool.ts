import { Tool } from '../tool.interface';
import * as fs from 'fs';
import * as path from 'path';

export class FileReadTool implements Tool {
  name = 'file_read';
  description = '–ß–∏—Ç–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ.';

  async run(input: { path: string }): Promise<string> {
    const { path: filePath } = input;

    if (!filePath || typeof filePath !== 'string') {
      return '‚ùå –£–∫–∞–∂–∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É';
    }

    const resolvedPath = path.resolve(filePath);

    try {
      const data = fs.readFileSync(resolvedPath, 'utf-8');
      return data.slice(0, 2000) || 'üì≠ –§–∞–π–ª –ø—É—Å—Ç';
    } catch (error: any) {
      return `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: ${error.message}`;
    }
  }
}
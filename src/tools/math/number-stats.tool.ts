import { Tool, ToolInputSpecField } from "../tool.interface";

export class NumberStatsTool implements Tool {
  name = "number_stats";

  description =
    "–í—ã—á–∏—Å–ª—è–µ—Ç –±–∞–∑–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –º–∞—Å—Å–∏–≤—É —á–∏—Å–µ–ª: –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∏ —Å—Ä–µ–¥–Ω–µ–µ. " +
    "–ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö, –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤.";

  inputSpec: ToolInputSpecField[] = [
    {
      name: "values",
      type: "array",
      itemsType: "number",
      required: true,
      description: "–ú–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞. –î–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç."
    }
  ];

  async run(input: { values: number[] }): Promise<string> {
    const { values } = input;

    if (!Array.isArray(values) || values.length === 0) {
      return "‚ùå –ú–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –ø—É—Å—Ç –∏–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω";
    }

    const min = Math.min(...values);
    const max = Math.max(...values);
    const avg = values.reduce((acc, val) => acc + val, 0) / values.length;

    return `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\nüîª –ú–∏–Ω: ${min}\nüî∫ –ú–∞–∫—Å: ${max}\nüìà –°—Ä–µ–¥–Ω–µ–µ: ${avg.toFixed(2)}`;
  }
}
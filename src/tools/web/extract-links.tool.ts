import { Tool } from '../tool.interface';
import axios from 'axios';
import * as cheerio from 'cheerio';

export class ExtractLinksTool implements Tool {
  name = 'extract_links';
  description = '–ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∏ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (—Ç–µ–≥–∏ <a href="...">).';

  async run(input: { url: string }): Promise<string> {
    const { url } = input;

    if (!url || typeof url !== 'string') {
      return '‚ùå –£–∫–∞–∂–∏ –≤–∞–ª–∏–¥–Ω—ã–π URL –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫';
    }

    try {
      const response = await axios.get(url, {
        headers: {
          'User-Agent': 'Mozilla/5.0 (compatible; AI-Agent/1.0)',
        },
        timeout: 10000,
      });

      const $ = cheerio.load(response.data);
      const links = new Set<string>();

      $('a[href]').each((_, el) => {
        const href = $(el).attr('href');
        if (href && !href.startsWith('javascript:')) {
          links.add(href.trim());
        }
      });

      const result = Array.from(links).slice(0, 30); // –æ–≥—Ä–∞–Ω–∏—á–∏–º –¥–æ 30 —Å—Å—ã–ª–æ–∫
      return result.length ? result.join('\n') : 'üîç –°—Å—ã–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.';
    } catch (error: any) {
      return `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${error.message}`;
    }
  }
}
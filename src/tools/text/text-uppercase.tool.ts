import { Tool, ToolInputSpecField } from "../tool.interface";

export class TextUppercaseTool implements Tool {
  name = "text_uppercase";

  description =
    "–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤–µ—Å—å —Ç–µ–∫—Å—Ç –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä (–∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã). " +
    "–ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞, –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤.";

  inputSpec: ToolInputSpecField[] = [
    {
      name: "text",
      type: "string",
      required: true,
      description: "–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä."
    }
  ];

  async run(input: { text: string }): Promise<string> {
    const { text } = input;

    if (!text || typeof text !== "string") {
      return "‚ùå –¢–µ–∫—Å—Ç –Ω–µ –∑–∞–¥–∞–Ω –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç";
    }

    return `üî† ${text.toUpperCase()}`;
  }
}
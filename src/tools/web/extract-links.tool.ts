import { Tool, ToolInputSpecField } from "../tool.interface";
import axios from "axios";
import * as cheerio from "cheerio";

export class ExtractLinksTool implements Tool {
  name = "extract_links";

  description =
    "–°–∫–∞–Ω–∏—Ä—É–µ—Ç HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É URL –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∏ (—Ç–µ–≥–∏ <a href=\"...\">). " +
    "–ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–∞–π—Ç–æ–≤, —Å–±–æ—Ä–∞ —Å—Å—ã–ª–æ–∫, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–ª–∏ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü. " +
    "–§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∏ –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è —Å—Å—ã–ª–∫–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–æ 30 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.";

  inputSpec: ToolInputSpecField[] = [
    {
      name: "url",
      type: "string",
      required: true,
      description: "URL-–∞–¥—Ä–µ—Å HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—ã, —Å –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –∏–∑–≤–ª–µ—á—å —Å—Å—ã–ª–∫–∏. –ü—Ä–∏–º–µ—Ä: \"https://example.com\"."
    }
  ];

  async run(input: { url: string }): Promise<string> {
    const { url } = input;

    if (!url || typeof url !== "string") {
      return "‚ùå –£–∫–∞–∂–∏ –≤–∞–ª–∏–¥–Ω—ã–π URL –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫";
    }

    try {
      const response = await axios.get(url, {
        headers: {
          "User-Agent": "Mozilla/5.0 (compatible; AI-Agent/1.0)"
        },
        timeout: 10000
      });

      const $ = cheerio.load(response.data);
      const links = new Set<string>();

      $("a[href]").each((_, el) => {
        const href = $(el).attr("href");
        if (href && !href.startsWith("javascript:")) {
          links.add(href.trim());
        }
      });

      const result = Array.from(links).slice(0, 30);
      return result.length ? result.join("\n") : "üîç –°—Å—ã–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.";
    } catch (error: any) {
      return `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${error.message}`;
    }
  }
}
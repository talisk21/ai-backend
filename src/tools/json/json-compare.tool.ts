import { Tool, ToolInputSpecField } from "../tool.interface";

export class JsonCompareTool implements Tool {
  name = "json_compare";
  description = "–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–≤–∞ JSON-–æ–±—ä–µ–∫—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç–ª–∏—á–∞—é—â–∏—Ö—Å—è –∫–ª—é—á–µ–π. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫–∏–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–º –∏–∑ –æ–±—ä–µ–∫—Ç–æ–≤, –∞ —Ç–∞–∫–∂–µ –ø–æ–ª—è —Å —Ä–∞–∑–ª–∏—á–∏—è–º–∏.";

  inputSpec: ToolInputSpecField[] = [
    {
      name: "a",
      type: "object",
      required: true,
      description: "–ü–µ—Ä–≤—ã–π JSON-–æ–±—ä–µ–∫—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è."
    },
    {
      name: "b",
      type: "object",
      required: true,
      description: "–í—Ç–æ—Ä–æ–π JSON-–æ–±—ä–µ–∫—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è."
    }
  ];

  async run(input: { a: any; b: any }): Promise<string> {
    const diff: string[] = [];

    function compare(obj1: any, obj2: any, path = "") {
      for (const key in obj1) {
        const fullPath = path ? `${path}.${key}` : key;
        if (!(key in obj2)) {
          diff.push(`üü• –¢–æ–ª—å–∫–æ –≤ A: ${fullPath}`);
        } else if (JSON.stringify(obj1[key]) !== JSON.stringify(obj2[key])) {
          diff.push(`‚ö†Ô∏è –û—Ç–ª–∏—á–∏–µ: ${fullPath}`);
        }
      }

      for (const key in obj2) {
        const fullPath = path ? `${path}.${key}` : key;
        if (!(key in obj1)) {
          diff.push(`üü¶ –¢–æ–ª—å–∫–æ –≤ B: ${fullPath}`);
        }
      }
    }

    compare(input.a, input.b);

    return diff.length ? diff.join("\n") : "‚úÖ –û–±—ä–µ–∫—Ç—ã –∏–¥–µ–Ω—Ç–∏—á–Ω—ã";
  }
}